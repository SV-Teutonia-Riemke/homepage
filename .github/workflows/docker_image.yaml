name: Create and publish a Docker image

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "latest"

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: --prefer-dist --no-suggest --no-scripts --ignore-platform-reqs --optimize-autoloader

      - name: Setup pnpm and Install
        uses: seepine/action-setup-pnpm@v1
        with:
          verison: 9

      - name: Build assets
        run: pnpm build

      - name: Remove File
        uses: Lyoko-Jeremie/js-rm-github-action@master
        with:
          path: |
            .git
            .github
            .pnpm-store
            assets
            docker
            docs
            etc
            node_modules
            tests
            .env.test
            .env.local.dist
            .editorconfig
            .gitignore
            composer-require-checker.json
            composer-unused.php
            docker-compose.yml
            features
            package.json
            phpcs.xml
            phpstan.neon
            phpstan-baseline.neon
            phpunit.xml.dist
            phpunit.xml
            pnpm-lock.yaml
            symfony.lock
            tsconfig.ts
            webpack.config.js
            rector.php
            vite.config.js

      - name: Create needed directories
        run: mkdir -p var/cache var/log var/flysystem public/media

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
