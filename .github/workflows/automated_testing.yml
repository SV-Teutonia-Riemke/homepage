name: Automated Testing

on:
  push:
    branches:
      - main

jobs:
  automatic_test:
    env:
      DATABASE_URL: mysql://test:test@127.0.0.1:3306/test

    services:
      mariadb:
        image: mariadb:lts
        ports:
          - 3306:3306
        env:
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: test
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      matrix:
        php-versions: [ '8.3' ]
        dependencies: [ 'locked', 'latest' ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: none

      - name: Validate composer.json and composer.lock
        run: composer validate --strict -n

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: --prefer-dist --no-progress --no-suggest --no-scripts

#      - name: Run Migration
#        run: |
#          php bin/console doctrine:database:drop --if-exists --force --no-interaction
#          php bin/console doctrine:database:create --if-not-exists --no-interaction
#          php bin/console doctrine:migrations:migrate --no-interaction
#
#      - name: Validate Schema
#        run: php bin/console doctrine:schema:validate

      - name: Composer dependency analyser
        run: composer cda

      - name: CS Check
        run: composer cs-check-all

      - name: Prepare cache
        run: composer prepare-test
#
      - name: PHPStan
        run: composer phpstan

#      - name: PHPUnit
#        run: composer phpunit
